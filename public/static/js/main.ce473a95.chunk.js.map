{"version":3,"sources":["components/Home/ListItem.js","service.js","components/Home/Home.js","components/Details/Details.js","components/Form/Form.js","components/auth/Auth.js","components/profile/Profile.js","components/register/Register.js","Router.js","components/NavBar/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["ListItem","_ref","_id","title","deleteItem","react_default","a","createElement","Link","to","concat","onClick","login","auth","history","axios","post","then","res","localStorage","setItem","data","token","JSON","stringify","user","push","catch","err","console","error","updateUser","id","form","log","formData","FormData","Object","keys","forEach","key","append","patch","headers","Content-Type","Home","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","delete","base_url","posts","state","filter","setState","_this2","getItem","props","get","x-access-token","getPosts","_this3","className","length","map","Home_ListItem","assign","Component","Detail","match","params","Form","handleSubmit","e","preventDefault","url","verb","alert","msg","handleChange","target","name","value","Equipo","Inicial","body","_this$state$form","onSubmit","htmlFor","type","onChange","cols","rows","placeholder","Auth","email","password","_this$state$user","React","Profile","files","src","alt","Register","confirmPassword","Router","Switch","Route","exact","path","component","Navigation","reactstrap_es","expand","href","App","Navbar","src_Router","Boolean","window","location","hostname","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ce473a95.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nconst ListItem = ({_id, title, deleteItem}) => (\n    <li>\n        <Link to={`/detail/${_id}`}>{title}</Link>\n        <Link to={`/${_id}/edit`}><button>Editar</button></Link>\n        <button onClick={() => deleteItem(_id)} >Eliminar</button>\n    </li>\n);\n\nexport default ListItem;","import axios from 'axios';\n\nconst base_url = \"http://localhost:3000/api\";\n\nexport const login = (auth, history) => {\n    axios.post(`${base_url}/auth/login`, auth)\n        .then(res => {\n            localStorage.setItem(\"token\", res.data.token);\n            localStorage.setItem(\"user\", JSON.stringify(res.data.user));\n            history.push(\"/\")\n        })\n        .catch(err => {\n            console.error(err);\n        })\n};\n\nexport const getPosts = (token) => {\n    return axios.get(`${base_url}/posts/`,{\n        headers: {\n            \"x-access-token\": token\n        }\n    })\n};\n\nexport const updateUser = (id, form) => {\n    console.log(form);\n    let formData = new FormData();\n    Object.keys(form).forEach(key => {\n        formData.append(key, form[key]);\n    });\n    axios.patch(`${base_url}/auth/${id}`, formData, {\n        headers: {\n            \"Content-Type\": \"multipart/form-data\"\n        }\n    })\n        .then(user => {\n            console.log(user);\n        })\n};","import React, {Component} from 'react';\nimport axios from 'axios';\nimport ListItem from './ListItem';\nimport {getPosts} from \"../../service\";\n\nclass Home extends Component{\n\n    constructor(){\n        super();\n        this.state = {\n            posts: []\n        };\n        this.base_url = \"http://localhost:3000/api\";\n    }\n\n    componentWillMount() {\n        const token = localStorage.getItem(\"token\");\n        if(!token) return this.props.history.push(\"/login\");\n        getPosts(token)\n            .then(res => {\n                this.setState({posts: res.data.posts});\n            })\n    }\n\n    deleteItem = (id) => {\n        axios.delete(`${this.base_url}/posts/${id}`)\n            .then(() => {\n                let {posts} = this.state;\n                posts = posts.filter(post => {\n                    return post._id !== id;\n                });\n                this.setState({posts});\n            })\n    };\n\n    render(){\n        const {posts} = this.state;\n        return (\n            <div className=\"box\">\n                <h4>Lista de posts</h4>\n                {posts.length > 0 ?\n                    <ul>\n                        {posts.map(post => <ListItem deleteItem={this.deleteItem} key={post._id} {...post} />) }\n                    </ul>\n                    : <strong>No hay nada</strong>}\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React, {Component} from 'react';\nimport axios from 'axios';\n\nclass Detail extends Component{\n\n    constructor(){\n        super();\n        this.state = {\n            post: {}\n        }\n    }\n\n    componentWillMount() {\n        const base_url = \"http://localhost:3000/api\";\n        axios.get(`${base_url}/posts/${this.props.match.params.id}`)\n            .then(res => {\n                const {post} = res.data;\n                this.setState({post})\n            })\n    }\n\n    render(){\n        const {post} = this.state;\n        return(\n            <div>\n                <h1>{post.title}</h1>\n            </div>\n        );\n    }\n}\n\nexport default Detail;","import React, {Component} from 'react';\nimport axios from 'axios';\n\nclass Form extends Component{\n\n    constructor(){\n        super();\n        this.state = {\n            form: {\n                Equipo: \"\",\n                Inicial: \"\",\n                body: \"\"\n            }\n        }\n    }\n\n    handleSubmit = (e) => {\n        const base_url = \"http://localhost:3000/api\";\n        e.preventDefault();\n\n        let url = this.props.match.params.id ? `${base_url}/posts/${this.props.match.params.id}` :  `${base_url}/posts/`;\n        let verb = this.props.match.params.id ? \"patch\" : \"post\";\n        const {form} = this.state;\n\n\n        axios[verb](url, form)\n            .then(() => {\n                this.props.history.push(\"/\");\n            })\n            .catch(err => {\n                alert(err.msg);\n            })\n    };\n\n    componentWillMount() {\n        if(!this.props.match.params.id) return;\n        const base_url = \"http://localhost:3000/api\";\n        axios.get(`${base_url}/posts/${this.props.match.params.id}`)\n            .then(res => {\n                const {post} = res.data;\n                this.setState({form:post});\n            })\n    }\n\n    handleChange = (e) => {\n        const {form} = this.state;\n        let field = e.target.name;\n        form[field] = e.target.value;\n        this.setState({form});\n    };\n\n    render(){\n        let {Equipo, Inicial, body} = this.state.form;\n        return(\n            <form onSubmit={this.handleSubmit}>\n                <div>\n                    <label htmlFor=\"\">\n                        Equipo:\n                        <input\n                            value={Equipo}\n                            type=\"text\"\n                            name=\"Equipo\"\n                            onChange={this.handleChange}/>\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"\">\n                        Iniciales:\n                        <input\n                            value={Inicial}\n                            type=\"text\"\n                            name=\"Inicial\"\n                            onChange={this.handleChange}/>\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"\">\n                        <textarea\n                            onChange={this.handleChange}\n                            value={body}\n                            name=\"body\"\n                            id=\"\"\n                            cols=\"20\"\n                            rows=\"10\"\n                            placeholder=\"Lema de tu equipo\">\n                        </textarea>\n                    </label>\n                </div>\n                <button type=\"submit\">Crear</button>\n            </form>\n        )\n    }\n}\n\nexport default Form;","import React from 'react';\nimport {login} from \"../../service\";\n\n\nclass Auth extends React.Component {\n    constructor() {\n      super();\n      this.state = {\n        user: {\n          email: \"\",\n          password: \"\"\n        }\n      };\n    }\n  \n    handleChange = e => {\n      const { user } = this.state;\n      let field = e.target.name;\n      user[field] = e.target.value;\n      this.setState({ user });\n      console.log(this.state);\n    };\n  \n    handleSubmit = e => {\n      e.preventDefault();\n      login(this.state.user, this.props.history);\n    };\n  \n    render() {\n      let { email, password } = this.state.user;\n  \n      return (\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"box\">\n            <div>\n              <label htmlFor=\"\">\n                Email:\n                <input\n                  onChange={this.handleChange}\n                  type=\"email\"\n                  value={email}\n                  name=\"email\"\n                  placeholder=\"ejemplo@ejemplo.com\"\n                />\n              </label>\n            </div>\n  \n            <div>\n              <label htmlFor=\"\">\n                Password:\n                <input\n                  onChange={this.handleChange}\n                  type=\"password\"\n                  name=\"password\"\n                  value={password}\n                />\n              </label>\n            </div>\n\n                \n            <button type=\"submit\">Login</button>\n          </div>\n          <div>¿ No tienes cuenta ?</div>\n          <button type='submit'>Register</button>\n        </form>\n      );\n    }\n  }\n  \n  export default Auth;","import React, {Component} from 'react';\nimport {updateUser} from \"../../service\";\n\nclass Profile extends Component{\n\n    constructor(){\n        super();\n        this.state = {\n            form: {\n                email: \"\"\n            }\n        }\n    }\n\n    handleChange = (e) => {\n        const {form} = this.state;\n        let field = e.target.name;\n        form[field] = e.target.files ? e.target.files[0] : e.target.value;\n        this.setState({form});\n        console.log(this.state.form);\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(this.state.form);\n        updateUser(this.props.match.params.id, this.state.form)\n\n    };\n\n    render(){\n        return(\n            <div>\n                <img src=\"\" alt=\"\"/>\n                <strong>Mi email</strong>\n\n\n                <form onSubmit={this.handleSubmit}>\n                    <div>\n                        <label htmlFor=\"\">\n                            Email:\n                            <input\n                                type=\"text\"\n                                name=\"email\"\n                                onChange={this.handleChange}\n                            />\n                        </label>\n                    </div>\n                    <div>\n                        <label htmlFor=\"\">\n                            Foto:\n                            <input\n                                onClick={this.handleChange}\n                                type=\"file\"\n                                name=\"picture\"\n                            />\n                        </label>\n                    </div>\n                    <button type=\"submit\">Actualizar</button>\n                </form>\n\n            </div>\n        );\n    }\n\n}\n\nexport default Profile;","import React, {Component} from 'react';\nimport {login} from \"../../service\";\n\n\nclass Register extends Component{\n\n    constructor(){\n        super();\n        this.state =  {\n            user: {\n                email: \"\",\n                password: \"\",\n                confirmPassword: \"\"\n            }\n        }\n    }\n\n    handleChange = (e) => {\n        const {user} = this.state;\n        let field = e.target.name;\n        user[field] = e.target.value;\n        this.setState({user});\n        console.log(this.state);\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        login(this.state.user, this.props.history)\n    };\n\n    render(){\n\n        let {email, password, confirmPassword} = this.state.user;\n\n        return (\n            <form onSubmit={this.handleSubmit}>\n            <div className='box'>\n\n            \n                <div>\n                    <label htmlFor=\"\">\n                        Email:\n                        <input\n                            onChange={this.handleChange}\n                            type=\"email\"\n                            value={email}\n                            name=\"email\"\n                            placeholder=\"ejemplo@ejemplo.com\"/>\n                    </label>\n                </div>\n\n                <div>\n                    <label htmlFor=\"\">\n                        Password:\n                        <input\n                            onChange={this.handleChange}\n                            type=\"password\"\n                            name=\"password\"\n                            value={password}/>\n                    </label>\n                </div>\n\n                <div>\n                    <label htmlFor=\"\">\n                        Confirm Password:\n                        <input\n                            onChange={this.handleChange}\n                            type=\"password\"\n                            value={confirmPassword}\n                            name=\"confirmPassword\"/>\n                    </label>\n                </div>\n                <button type=\"submit\">Register</button>\n                    </div>\n            </form>\n        )\n    }\n}\n\nexport default Register;\n\n  \n","import React from 'react';\nimport {Switch, Route} from \"react-router-dom\";\nimport Home from \"./components/Home/Home\";\nimport Detail from \"./components/Details/Details\";\nimport Form from \"./components/Form/Form\";\nimport Auth from \"./components/auth/Auth\";\nimport Profile from \"./components/profile/Profile\";\nimport '../src/App.css';\nimport Register from './components/register/Register'\n\nconst Router = () => (\n    <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/detail/:id\" component={Detail}/>\n        <Route exact path=\"/new\" component={Form}/>\n        <Route exact path=\"/:id/edit\" component={Form}/>\n        <Route exact path=\"/login\" component={Auth}/>\n        <Route exact path=\"/profile/:id\" component={Profile}/>\n        <Route exact path=\"/register\" component={Register}/>\n    </Switch>\n);\n\nexport default Router;","import React from \"react\";\nimport { NavbarBrand, Navbar } from \"reactstrap\";\n\nconst Navigation = () => (\n  <Navbar expand=\"md\" className=\"stick-nav\">\n    <NavbarBrand href=\"/\">Home</NavbarBrand>\n    <NavbarBrand href=\"/player\">Player</NavbarBrand>\n\n    <NavbarBrand href=\"/new\">New Team</NavbarBrand>\n    <NavbarBrand href=\"/detail/:id\">Teams</NavbarBrand>\n\n  </Navbar>\n);\n\nexport default Navigation;\n","import React, { Component } from 'react';\nimport Router from \"./Router\";\nimport './App.css';\nimport Navbar from './components/NavBar/Navbar'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='home'>\n        <div><Navbar/></div>\n      <div className=\"App\">\n        <Router/>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst WithRouter = () => (\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n);\n\nReactDOM.render(<WithRouter />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}